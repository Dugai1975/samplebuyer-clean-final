// Enhanced types that extend existing structure
/**
 * @deprecated Use unified types from '@project-types' instead.
 */
export type { BaseProject, Project, FeasibilityData, Quota, Buyer, SampleCriteria, LaunchConfig } from '@project-types';

// Types below are unique to enhanced.ts and not part of the unified project types.
// (All project-related types are now re-exported from '@project-types')

export interface ProjectPreview {
  name: string;
  description: string;
  estimatedCost: number;
  timeline: string;
  cpi: number;
}

export interface AIPromptAnalysis {
  projectName: string;
  country: string;
  audience: {
    ageRange: [number, number];
    gender: string[];
    income?: string;
    interests?: string[];
  };
  surveyType: string;
  completes: number;
  incidenceRate: number;
  loi: number;
  confidence: number;
  extractedKeywords?: string[];
  suggestedQuotas?: import('@project-types').Quota[];
}

export interface LinkValidationResult {
  url: string;
  isValid: boolean;
  status: 'success' | 'warning' | 'error';
  message: string;
  responseTime?: number;
  httpStatus?: number;
}

export interface SmartSetupProgress {
  aiPromptUsed: boolean;
  aiConfidence?: number;
  linksValidated: boolean;
  autoGeneratedLinks: boolean;
  setupTime: number;
  completionPercentage: number;
}

export interface ProjectCreationData {
  // ... existing fields
  redirect_links?: {
    complete: string;
    terminate: string;
    quota_full: string;
    duplicate?: string;
    quality?: string;
    screenout?: string;
    timeout?: string;
  };
  // launch_type?: 'soft' | 'full'; // Soft launch type reference commented out (deprecated)
  // soft_launch_config?: {
  //   testLimit: number;
  //   testLimitType: 'fixed' | 'percentage';
  //   autoPause: boolean;
  //   redirectLinks?: Record<string, string>;
  // };
  // [Soft launch config fields commented out as part of complex soft launch state cleanup]

  // Basic info
  name: string;
  description?: string;
  country: string;
  language: string;
  languages?: string[];
  
  // Survey details
  completes: number;
  loi_minutes: number;
  incidence_rate: number;
  survey_id?: string;
  survey_url?: string;
  
  // Demographics
  demographics: {
    gender?: string[];
    age_ranges?: Array<{min: number, max: number}>;
    income?: string[];
    employment?: string[];
    custom_criteria?: Record<string, any>;
  };
  
  // Timeline & Budget
  field_days?: number;
  max_budget?: number;
  priority_level?: 'standard' | 'rush' | 'economy';
  
  // Advanced options
  quality_requirements?: {
    min_quality_score: number;
    fraud_protection: boolean;
    device_restrictions?: string[];
  };
  
  // Auto-calculated from feasibility
  estimated_cpi?: number;
  estimated_timeline?: number;
  selected_suppliers?: string[];
}
